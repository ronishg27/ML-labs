# -*- coding: utf-8 -*-
"""my-rosenblatt.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19-HiDey5oqqRnFWGi88S2dCyWmhoniqC
"""

import numpy as np
import itertools

class RosenblattNeuron:
    def __init__(self, input_size, learning_rate=0.1):
        # Initialize weights (including the bias as the last weight)
        self.weights = np.zeros(input_size + 1)
        self.learning_rate = learning_rate

    def predict(self, inputs):
        # Add the bias input (1) to the inputs
        inputs_with_bias = np.append(inputs, 1)
        # Calculate the weighted sum (dot product)
        weighted_sum = np.dot(self.weights, inputs_with_bias)
        # Apply the activation function (sign function)
        return 1 if weighted_sum > 0 else 0

    def train(self, training_inputs, labels, epochs=100):
        for epoch in range(epochs):
            for inputs, label in zip(training_inputs, labels):
                prediction = self.predict(inputs)
                # Calculate the error
                error = label - prediction
                # Update the weights (including bias)
                self.weights += self.learning_rate * error * np.append(inputs, 1)

    def generate_truth_table(self):
        # Number of inputs
        num_inputs = len(self.weights) - 1

        # Generate all possible input combinations (truth table)
        truth_table = list(itertools.product([0, 1], repeat=num_inputs))

        # Print the truth table
        print("Inputs -> Output")
        for inputs in truth_table:
            output = self.predict(np.array(inputs))
            print(f"{inputs} -> {output}")

# Define training data for an AND gate
training_inputs = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
labels = np.array([0, 0, 0, 1])

and_perceptron = RosenblattNeuron(input_size=2)
and_perceptron.train(training_inputs, labels, epochs=10)

and_perceptron.generate_truth_table()

# for OR Gate
labels = np.array([0, 1, 1, 1])
or_perceptron = RosenblattNeuron(input_size=2)
or_perceptron.train(training_inputs, labels, epochs=10)

or_perceptron.generate_truth_table()

